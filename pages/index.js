import Head from "next/head";
import { Inter } from "next/font/google";
import {
  Avatar,
  Badge,
  Button,
  Container,
  Flex,
  Skeleton,
  Stack,
  Table,
  TableContainer,
  Tbody,
  Td,
  Text,
  Th,
  Thead,
  Tr,
  useDisclosure,
} from "@chakra-ui/react";
import { useRouter } from "next/router";
import React, { useCallback, useEffect, useState } from "react";
import CreateUser from "@/components/CreateUser";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const router = useRouter();
  const [userList, setUserList] = useState([]);
  const [loading, setLoading] = useState(false);
  const [page, setPage] = useState(1);

  // GET ALL USERS LISTING
  const getUsersListing = useCallback(async () => {
    setLoading(true);
    const res = await fetch(`/api/users?page=${page}`);
    const newData = await res.json();
    setUserList(newData);
    setLoading(false);
  },[page]);

  useEffect(() => {
    getUsersListing();
  }, [getUsersListing]);

  const handlePageChange = (newPage) => {
    setPage(newPage);
    router.push(`/?page=${newPage}`, undefined, { shallow: true });
  };

  return (
    <>
      <CreateUser isOpen={isOpen} onClose={onClose} getUsersListing={getUsersListing} />
      <Head>
        <title>User Listing Demo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${inter.className}`}>
        <Container
          maxW="container.xl"
          bg="white"
          mt={10}
          borderRadius={10}
          boxShadow={"lg"}
        >
          <Flex
            fontSize={22}
            fontWeight={600}
            justifyContent={"space-between"}
            alignItems={"center"}
          >
            <Text color={"black"}>User Listing</Text>
            <Button
              my={4}
              onClick={() => onOpen()}
              colorScheme="teal"
              variant="solid"
            >
              Create User
            </Button>
          </Flex>
          {loading ? (
            <Stack>
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
              <Skeleton height="50px" />
            </Stack>
          ) : (
            <>
              <TableContainer>
                <Table variant="simple">
                  <Thead>
                    <Tr>
                      <Th>Name</Th>
                      <Th>Gender</Th>
                      <Th>Email</Th>
                      <Th>Status</Th>
                      <Th>Action</Th>
                    </Tr>
                  </Thead>
                  <Tbody>
                    {userList.length > 0 ? (
                      userList.map((item, i) => (
                        <Tr key={"tr-" + i}>
                          <Td>
                            <Avatar size="xs" marginEnd={3} name={item.name} />
                            {item.name}
                          </Td>
                          <Td>{item.gender}</Td>
                          <Td>{item.email}</Td>
                          <Td>
                            {item.status === "active" ? (
                              <Badge variant="solid" colorScheme="green">
                                Active
                              </Badge>
                            ) : (
                              <Badge variant="solid" colorScheme="red">
                                Inactive
                              </Badge>
                            )}
                          </Td>
                          <Td>
                            <Button
                              size={"sm"}
                              onClick={() => {
                                history.pushState(item , "", `/${item.id}`)
                                router.push(`/${item.id}`)
                              }}
                              variant="outline"
                              colorScheme="Teal"
                              color="Teal"
                            >
                              {" "}
                              View{" "}
                            </Button>
                          </Td>
                        </Tr>
                      ))
                    ) : (
                      <Tr>
                        <Td colSpan={5} textAlign={"center"} fontSize={16}>No data found</Td>
                      </Tr>
                    )}
                  </Tbody>
                </Table>
              </TableContainer>
              {userList.length > 0 && (
                <Flex py="5" justifyContent={"center"} gap={2}>
                  <Button
                    onClick={() =>
                      page !== 1 ? handlePageChange(page - 1) : null
                    }
                    marginEnd={10}
                    size={"md"}
                    colorScheme="teal"
                    variant="solid"
                  >
                    Previous
                  </Button>
                  <Button
                    onClick={() => handlePageChange(page + 1)}
                    colorScheme="teal"
                    size={"md"}
                    px="8"
                    variant="solid"
                  >
                    Next
                  </Button>
                </Flex>
              )}
            </>
          )}
        </Container>
      </main>
    </>
  );
}