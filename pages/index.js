import Head from "next/head";
import { Inter } from "next/font/google";
import {
  Button,
  Container,
  Flex,
  Text,
  useDisclosure,
} from "@chakra-ui/react";
import { useRouter } from "next/router";
import React, { useCallback, useEffect, useState } from "react";
import CreateUser from "@/components/CreateUser";
import UserListing from "@/components/UserListing";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const { isOpen, onOpen, onClose } = useDisclosure();
  const router = useRouter();
  const [userList, setUserList] = useState([]);
  const [loading, setLoading] = useState(false);
  const [page, setPage] = useState(1);

  // GET ALL USERS LISTING
  const getUsersListing = useCallback(async () => {
    setLoading(true);
    const res = await fetch(`/api/users?page=${page}`);
    const newData = await res.json();
    setUserList(newData);
    setLoading(false);
  }, [page]);

  useEffect(() => {
    getUsersListing();
  }, [getUsersListing]);

  // Change Page Func
  const handlePageChange = (newPage) => {
    setPage(newPage);
    router.push(`/?page=${newPage}`, undefined, { shallow: true });
  };

  return (
    <>
      <CreateUser
        isOpen={isOpen}
        onClose={onClose}
        getUsersListing={getUsersListing}
      />
      <Head>
        <title>User Listing Demo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${inter.className}`}>
        <Container
          maxW="container.xl"
          bg="white"
          mt={10}
          borderRadius={10}
          boxShadow={"lg"}
        >
          <Flex
            fontSize={22}
            fontWeight={600}
            justifyContent={"space-between"}
            alignItems={"center"}
          >
            <Text color={"black"}>User Listing</Text>
            <Button
              my={4}
              onClick={() => onOpen()}
              colorScheme="teal"
              variant="solid"
            >
              Create User
            </Button>
          </Flex>
          <UserListing loading={loading} userList={userList} handlePageChange={(e) => handlePageChange(e)}  page={page} />
        </Container>
      </main>
    </>
  );
}
